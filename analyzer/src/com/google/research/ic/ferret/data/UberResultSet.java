/*******************************************************************************
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
package com.google.research.ic.ferret.data;



/**
 * TODO: Insert description here. (generated by marknewman)
 */
public class UberResultSet {

  private ResultSet strongMatches = null;
  private ResultSet weakMatches = null;
  private ResultSet elongatedMatches = null;
  private ResultSet altEndingMatches = null;
  private Snippet query = null;

  public UberResultSet(Snippet query) {
    this.query = query;
  }

  public ResultSet getStrongMatches() {
    return strongMatches;
  }
  
  public void setStrongMatches(ResultSet strongMatches) {
    this.strongMatches = strongMatches;
  }
  
  public ResultSet getWeakMatches() {
    return weakMatches;
  }
  
  public void setWeakMatches(ResultSet weakMatches) {
    this.weakMatches = weakMatches;
  }

  public ResultSet getElongatedMatches() {
    return elongatedMatches;
  }
  
  public void setElongatedMatches(ResultSet elongatedMatches) {
    this.elongatedMatches = elongatedMatches;
  }
  
  public ResultSet getAltEndingMatches() {
    return altEndingMatches;
  }

  public void setAltEndingMatches(ResultSet altEndingMatches) {
    this.altEndingMatches = altEndingMatches;
  }

  public void mergeResults(UberResultSet otherURS) {
    if (strongMatches == null) {
      strongMatches = new ResultSet();
    }
    strongMatches.mergeResults(otherURS.getStrongMatches());
    
    if (weakMatches == null) {
      weakMatches = new ResultSet();
    }
    weakMatches.mergeResults(otherURS.getWeakMatches());

    if (elongatedMatches == null) {
      elongatedMatches = new ResultSet();
    }
    elongatedMatches.mergeResults(otherURS.getElongatedMatches());

    if (altEndingMatches == null) {
      altEndingMatches = new ResultSet();
    }
    altEndingMatches.mergeResults(otherURS.getAltEndingMatches());
  }
}



